import time
import os #This is only needed on Windows environments
import getpass
import logging
from concurrent.futures import ProcessPoolExecutor
from netmiko import ConnectHandler

logging.basicConfig(filename='netmiko_global.log', level=logging.DEBUG)
logger = logging.getLogger("netmiko")

def send_commands(host):
    """Function to connect to and run Juniper config command on each device in hosts_info"""
    try:
        connection = ConnectHandler(**host)
    except Exception:
        print('Connection failed on', host['ip'])
        return
    
    print('Connection Established to', host['ip'])
    config_commands = [ 
      ''
    ]
    connection.send_command(config_commands)
    print('Completed on', host['ip'])

    

def main():
    """Main function to use multiprocessing to concurrently connect to 10 devices; calls send_commands function"""

    username = input('Username: ')
    password = getpass.getpass('Password: ')
    device_list = os.path.normpath(input('Paste the path to your target hosts: '))
    starting_time = time.perf_counter()
    
    devices = []

    with open(device_list) as file:
        devices_file = file.read()

    for line in devices_file.splitlines():
        device = {
            'device_type': 'juniper_junos',
            'ip': "",
            'username': username,
            'password': password,
        }
        device['ip'] = line.strip()
        devices.append(device)

    with ProcessPoolExecutor(max_workers=10) as executor:
        results = executor.map(send_commands, devices)

    print(results)

    print(f'Time Elapsed: {time.perf_counter() - starting_time}')


if __name__ == '__main__':
     main()
